@import "./_variables";
@import "../utils/_functions";

@mixin format-base {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: pxToRem(20);
  font: inherit;
  vertical-align: baseline;
}

@mixin border($color: none) {
  border: pxToRem(2) solid $color;
}

@mixin border-caption($vertical: none, $horizontal: none) {
  @include caption;
  border-#{$vertical}: pxToRem(2) solid #fff;
  border-#{$horizontal}: pxToRem(2) solid #fff;
  #{$vertical}: 0;
  #{$horizontal}: 0;
}

@mixin caption {
  @include sizePx(20, 20);
  @include transition(all, 1s, ease-in-out);
  content: $content-empty;
  position: absolute;
}

@mixin display($display: block, $width: $full) {
  display: $display;
  width: $width;
}

@mixin edge($top, $right: null, $bottom: null, $left: null) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin header {
  position: relative;
  text-transform: uppercase;
  font-size: pxToRem(22);
}

@mixin line-horizontal {
  position: absolute;
  content: $content-empty;
}

@mixin marginPx($top, $right: 0, $bottom: 0, $left: 0) {
  margin: pxToRem($top) pxToRem($right) pxToRem($bottom) pxToRem($left);
}

@mixin paddingPx($top: null, $right: null) {
  padding: pxToRem($top) pxToRem($right);
}

@mixin size($width: $full, $height: $full) {
  width: $width;
  height: $height;
}
@mixin sizePx($width, $height) {
  width: pxToRem($width);
  height: pxToRem($height);
}

@mixin trans-centered {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}

@mixin transform($sx, $sy) {
  -webkit-transform: scale($sx, $sy);
  -ms-transform: scale($sx, $sy);
  -o-transform: scale($sx, $sy);
  transform: scale($sx, $sy);
}

@mixin transform-origin($x, $y) {
  -webkit-transform-origin: $x $y;
  -ms-transform-origin: $x $y;
  -o-transform-origin: $x $y;
  transform-origin: $x $y;
}

@mixin transition($elem, $time, $func) {
  -webkit-transition: $elem $time $func;
  -o-transition: $elem $time $func;
  transition: $elem $time $func;
}

@mixin respond($breakpoint) {
  @if $breakpoint == small {
    @media (min-width: $bp-small) {
      @content;
    }
  }
  @if $breakpoint == medium {
    @media (min-width: $bp-medium) {
      @content;
    }
  }
  @if $breakpoint == large {
    @media (min-width: $bp-large) {
      @content;
    }
  }
}
